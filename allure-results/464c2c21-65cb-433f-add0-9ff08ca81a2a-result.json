{"name": "test_orangehrm_data_driven[chromium-test_case4]", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TimeoutError: Page.click: Timeout 30000ms exceeded.\nCall log:\n  - waiting for locator(\"a[href='/web/index.php/pim/addEmployee']\")", "trace": "page = <Page url='https://opensource-demo.orangehrmlive.com/web/index.php/pim/viewEmployeeList'>, test_case = {'action': 'add_employee', 'expected': 'Successfully Saved', 'extra_data': 'John,Doe', 'module': 'PIM', ...}\n\n    @pytest.mark.parametrize(\"test_case\", test_data)\n    def test_orangehrm_data_driven(page, test_case):\n        login = LoginPage(page)\n        dashboard = DashboardPage(page)\n        pim = PIMPage(page)\n        leave = LeavePage(page)\n    \n        login.load()\n        login.login(test_case[\"username\"], test_case[\"password\"])\n    \n        action = test_case[\"action\"]\n        expected = test_case[\"expected\"]\n        extra = test_case[\"extra_data\"]\n        module = test_case[\"module\"]\n    \n        if action == \"login\":\n            if expected == \"Dashboard\":\n                assert dashboard.verify_login_successful()\n            else:\n                assert page.locator(\"p:has-text('Invalid credentials')\").is_visible()\n    \n        elif action == \"open_menu\":\n            dashboard.go_to_menu(module)\n            assert page.locator(f\"h6:has-text('{expected}')\").is_visible()\n    \n        elif action == \"add_employee\":\n            dashboard.go_to_menu(\"PIM\")\n            first, last = extra.split(',')\n>           pim.add_employee(first, last)\n\ntests\\test_data_driven.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\pim_page.py:6: in add_employee\n    self.page.click(\"a[href='/web/index.php/pim/addEmployee']\")\n..\\..\\anaconda3\\envs\\pythonplywright\\lib\\site-packages\\playwright\\sync_api\\_generated.py:9932: in click\n    self._sync(\n..\\..\\anaconda3\\envs\\pythonplywright\\lib\\site-packages\\playwright\\_impl\\_page.py:833: in click\n    return await self._main_frame.click(**locals_to_params(locals()))\n..\\..\\anaconda3\\envs\\pythonplywright\\lib\\site-packages\\playwright\\_impl\\_frame.py:488: in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\n..\\..\\anaconda3\\envs\\pythonplywright\\lib\\site-packages\\playwright\\_impl\\_connection.py:61: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x0000014BED984100>, cb = <function Channel.send.<locals>.<lambda> at 0x0000014BEDD66170>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Page.click: Timeout 30000ms exceeded.\nE           Call log:\nE             - waiting for locator(\"a[href='/web/index.php/pim/addEmployee']\")\n\n..\\..\\anaconda3\\envs\\pythonplywright\\lib\\site-packages\\playwright\\_impl\\_connection.py:528: TimeoutError"}, "attachments": [{"name": "failure_screenshot", "source": "dcc91259-8410-49f8-9324-218256bf9915-attachment.png", "type": "image/png"}, {"name": "log", "source": "d23f7cb6-074b-4cf0-bff0-73232bcb5eef-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "404f03f8-beea-41d2-93d0-66abb57090d8-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "browser_name", "value": "'chromium'"}, {"name": "test_case", "value": "{'testcase': 'add_employee', 'username': 'Admin', 'password': 'admin123', 'module': 'PIM', 'action': 'add_employee', 'expected': 'Successfully Saved', 'extra_data': 'John,Doe'}"}], "start": 1750157112331, "stop": 1750157154023, "uuid": "cda795df-2765-42bc-bb40-eb667a1b4001", "historyId": "944dc65afb8d63d0d41d76c43aa1e22f", "testCaseId": "e4d5c2159c82bb6ea1e2f42d8743a1e7", "fullName": "tests.test_data_driven#test_orangehrm_data_driven", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_data_driven"}, {"name": "host", "value": "SIDDHESH-MINIPC"}, {"name": "thread", "value": "13800-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_data_driven"}]}